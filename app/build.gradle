apply plugin: 'com.android.application'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

def getTime() {
    return new Date().format("yyyyMMdd", TimeZone.getDefault());
}

android {
    //去除lint错误
    lintOptions {
        abortOnError false
    }

    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    //默认配置
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    //签名
    signingConfigs {
        dds {
            keyAlias 'dds_key_alias'
            keyPassword 'dds_key_alias_ad'
            storeFile file('../keys/dds.keystore')
            storePassword 'DDS_AD_2017'
        }
        c501a {
            keyAlias 'cooee'
            keyPassword 'cooee8888'
            storeFile file('../keys/c501a')
            storePassword 'cooee8888'
        }
        c502a {
            keyAlias 'cooee'
            keyPassword 'cooee8888'
            storeFile file('../keys/c502a')
            storePassword 'cooee8888'
        }
    }
    //渠道
    productFlavors {
        dds_c501a {
            applicationId "com.cooeeui.zenlauncher"
        }
        dds_c502a {
            applicationId "com.cooeeui.cometcalendar"
        }
        dds_c601a {
            applicationId "com.ibingo.launcher"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        c501a_buildType {
            signingConfig signingConfigs.c501a
        }
        c502a_buildType {
            signingConfig signingConfigs.c502a
        }
        c601a_buildType {
            signingConfig null
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    //打包后应用名称
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            def fileName
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if (variant.buildType.name.equals('release')) {
                    fileName = "dds-release-${variant.productFlavors[0].name}-${defaultConfig.versionName}-${getTime()}.apk"
                } else if (variant.buildType.name.equals('debug')) {
                    fileName = "dds-debug-${variant.productFlavors[0].name}-${defaultConfig.versionName}-${getTime()}.apk"
                }
                if (fileName != null){
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    dds_c501aCompile project(path: ':ddsadlib', configuration: 'c501aRelease')
    dds_c502aCompile project(path: ':ddsadlib', configuration: 'c502aRelease')
    dds_c601aCompile project(path: ':ddsadlib', configuration: 'c601aRelease')
}
