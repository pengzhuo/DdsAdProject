apply plugin: 'com.android.library'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 20
        versionCode 1
        versionName "1.0"

    }
    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        c601a {
            manifestPlaceholders = [
                    FLURRY_APPKEY      : properties.getProperty("app_key_flurry_c601a"),
                    UMENG_APPKEY       : properties.getProperty("app_key_umeng_c601a"),
                    UMENG_CHANNEL      : properties.getProperty("app_channel_umeng_c601a"),
                    APP_VERSION        : properties.getProperty("version_c601a"),
                    APP_CHANNEL_ID     : properties.getProperty("channel_c601a"),
                    APP_COOPERATION_ID : properties.getProperty("work_c601a"),
                    APP_PRODUCT_ID     : properties.getProperty("product_c601a"),
                    SITE_FACEBOOK      : properties.getProperty("fb_site_c601a"),
                    SITE_ADMOB         : properties.getProperty("admob_site_c601a"),
                    SITE_DDS           : properties.getProperty("dds_site_c601a"),
                    SITE_INTERVAL      : properties.getProperty("site_interval_c601a"),
                    GLOABL_INTERVAL    : properties.getProperty("gloabl_interval_c601a"),
                    NETWORK_TIME       : properties.getProperty("network_time_c601a"),
                    FB_APPID           : properties.getProperty("fb_appid_c601a"),
            ]
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'com.jaredrummler:android-processes:1.0.9'
    compile 'com.facebook.android:audience-network-sdk:4.+'
    compile 'com.google.android.gms:play-services-ads:10.2.0'
    compile 'com.flurry.android:analytics:6.9.2'
    //noinspection GradleCompatible
    compile 'com.android.support:support-v4:25.0.0'
    compile 'com.android.support:recyclerview-v7:25.0.0'
}

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
// This is the library version used when deploying the artifact
version = PROJ_VERSION
// Maven Group ID for the artifact
group = PROJ_GROUP

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                description PROJ_DESCRIPTION

                // Add your description here
                name PROJ_POM_NAME
                url PROJ_WEBSITEURL

                // Set your license
                licenses {
                    license {
                        name LICENSE_NAME
                        url LICENSE_URL
                        distribution PROJ_DESCRIPTION
                    }
                }
                developers {
                    developer {
                        id DEVELOPER_ID
                        name DEVELOPER_NAME
                        email DEVELOPER_EMAIL
                    }
                }
                scm {
                    connection PROJ_VCSURL
                    developerConnection PROJ_VCSURL
                    url PROJ_WEBSITEURL
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError = false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = PROJ_NAME
        websiteUrl = PROJ_WEBSITEURL
        vcsUrl = PROJ_VCSURL
        licenses = ["Apache-2.0"]
        publish = true
        version {
            desc = PROJ_DESCRIPTION
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}

